#ifndef _EIGEN_JACOBI_HPP_INCLUDED_SDF3IUJFA89S04390SFIUH3IUHSFJKDH43QU9ISKJHIDUHASIUHFDIUHTKJHFSDIU
#define _EIGEN_JACOBI_HPP_INCLUDED_SDF3IUJFA89S04390SFIUH3IUHSFJKDH43QU9ISKJHIDUHASIUHFDIUHTKJHFSDIU

#include <matrix/matrix.hpp>

#include <cassert>
#include <valarray>

namespace feng
{

    template< typename Matrix1, typename Matrix2, typename Otor >
    void eigen_jacobi( const Matrix1& A, Matrix2& V, Otor o )
    {
        typedef typename Matrix1::value_type value_type;
        typedef typename Matrix1::size_type size_type;
        assert( A.row() == A.col() );
        auto a = A;
        auto const n    = a.row();
        auto const one  = value_type(1);
        V.resize( n, n );
        std::fill( V.begin(), V.end(), value_type( 0 ) );
        std::fill( V.diag_begin(), V.diag_end(), one );
        
        for ( size_type p = 0; p != n; ++p )
            for ( size_type q = 0; q != n; ++q  )
                for ( size_type r = 0; r != n; ++r )
                {
                    if ( r == p ) continue;
                    if ( r == q ) continue;

                    auto const theta = ( a[q][q] - a[p][p] ) / ( a[p][q] + a[p][q] ); //check inf here!
                    auto const t     = std::copysign( one / (std::abs(theta) + std::sqrt(theta*theta + one)), theta); //check inf here
                    auto const c     = one / std::sqrt( t * t + one );
                    auto const s     = t * c;
                    auto const tau   = s / ( one + c );
                    auto const app   = a[p][p] - t * a[p][q];
                    auto const aqq   = a[q][q] + t * a[p][q];
                    auto const arp   = a[r][p] - s * ( a[r][q] + tau * a[r][p] );
                    auto const arq   = a[r][q] + s * ( a[r][p] + tau * a[r][q] );

                    a[p][q] = value_type(0);
                    a[p][p] = app;
                    a[q][q] = aqq;
                    a[r][p] = arp;
                    a[r][q] = arq;


                }



    }




}//namespace feng

#endif//_EIGEN_JACOBI_HPP_INCLUDED_SDF3IUJFA89S04390SFIUH3IUHSFJKDH43QU9ISKJHIDUHASIUHFDIUHTKJHFSDIU

